import 'byte.grm' as bytelib;   # copy this file from grammars/byte.grm
Letter = bytelib.kAlpha;        # kAlpha is defined in byte.grm
Sigma = Letter | "'";           # alphabet also includes stress mark
Vowel = "a" | "e" | "i" | "o" | "u" | "A" | "E" | "I" | "O" | "U";
Consonant = Letter - Vowel;
Nucleus = Vowel+;

## new code

SigmaStar = (Sigma | "#")*;

# handles (1)
export FindNuclei = (Consonant* (("":"#")|("'":"'")) Nucleus Consonant+)* Consonant* ((("":"#")|("'":"'")) Nucleus)? Consonant*;

export LastSyllableStressed = SigmaStar "'" Nucleus Consonant*;

export LastSyllableUnstressed = SigmaStar - LastSyllableStressed;

export NextSyllableUnstressed = (Nucleus Consonant* "#" SigmaStar);

# s'up#erc'al#ifr#ag#il#ist#ic#exp#iy#al#id#oc#ious
# s'uperc'alifr'agil'istic'expiy'alid'ocious

# r#ound#ab#out

#should be:
# r'ound#ab#out

export Stress1 = CDRewrite["#":"'", LastSyllableUnstressed, NextSyllableUnstressed, SigmaStar, 'ltr', 'obl'];

export Stress2 = Optimize[FindNuclei @ Stress1];