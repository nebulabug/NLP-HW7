import 'byte.grm' as bytelib;
import 'arpabet.grm' as arpabet;
Sigma = bytelib.kGraph | bytelib.kSpace;


arpa = SymbolTable['arpabet.sym'];
#EmptyArpa = "".arpa;

#Pronounce = StringFile['../data/cmudict.txt'];

#StressPattern = CDRewrite[(Sigma - bytelib.kDigit) : "", "", "", Sigma*, 'sim', 'obl'];
#Dacytl = ("1" | "2") "0" "0";  
#export Results = Optimize[Project[Pronounce @ StressPattern @ (Dacytl*), 'input']];


### new code for part d

Stressed = arpabet.Stressed;
Unstressed = arpabet.Unstressed;
Consonant = arpabet.Consonant;

Pronounce = StringFile['../data/cmudict.txt', byte, arpa];

Dactyl = Consonant* Stressed Consonant* Unstressed Consonant* Unstressed Consonant*;

export Results = Optimize[Project[Pronounce @ (Dactyl*), 'input']];

export ListResults = "" : Results;

